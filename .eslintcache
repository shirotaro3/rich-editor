[{"/Users/shirotaro/Development/rich-editor/src/reportWebVitals.js":"1","/Users/shirotaro/Development/rich-editor/src/App.js":"2","/Users/shirotaro/Development/rich-editor/src/index.js":"3","/Users/shirotaro/Development/rich-editor/src/Editor.js":"4"},{"size":362,"mtime":1609510138765,"results":"5","hashOfConfig":"6"},{"size":6522,"mtime":1611432319187,"results":"7","hashOfConfig":"6"},{"size":500,"mtime":1609510138764,"results":"8","hashOfConfig":"6"},{"size":7390,"mtime":1611429961779,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1do1nc5",{"filePath":"12","messages":"13","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/shirotaro/Development/rich-editor/src/reportWebVitals.js",[],"/Users/shirotaro/Development/rich-editor/src/App.js",["19","20","21","22","23","24","25"],"/Users/shirotaro/Development/rich-editor/src/index.js",[],"/Users/shirotaro/Development/rich-editor/src/Editor.js",["26","27","28"],"import react, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Quill from 'quill';\nimport Delta from 'quill-delta';\n// import 'react-quill/dist/quill.snow.css';\nimport { MdSend, MdFormatBold, MdFormatItalic, MdFormatStrikethrough, MdLink, MdFormatUnderlined, MdFormatListBulleted, MdFormatListNumbered } from 'react-icons/md';\nimport { HiOutlinePaperClip } from 'react-icons/hi';\nimport { ImSpinner2 } from 'react-icons/im';\n\nconst Editor = ( props ) =>\n{\n    const [ editor, setEditor ] = useState();\n    const [ sendable, setSendable ] = useState(false);\n    const [ focus, setFocus] = useState(false);\n    const onSubmit = useCallback( async( e ) =>\n    {\n        e.preventDefault();\n        setFocus(true);\n        const value = editor.root.innerHTML;\n        if( value === `<p><br></p>` )\n        {\n            return;\n        };\n        await props.onSubmit( value );\n        editor.setContents([{ insert: `\\n`}]);\n        editor.setSelection(0, 0);\n    } );\n\n    useEffect( () =>\n    {\n        const editor = new Quill('#editor',\n        {\n            modules:\n            {\n                toolbar:\n                {\n                    container: '#toolbar',\n                    handlers:\n                    {\n                        'link': function(value) {\n                            if (value) {\n                              var href = prompt('Enter the URL');\n                              editor.format('link', href);\n                            } else {\n                              editor.format('link', false);\n                            }\n                        }                      \n                    }\n                }\n            },\n            placeholder: props.placeholder !== undefined ? props.placeholder : ``,\n        });\n        const onFocus = () =>\n        {\n            setFocus(true);\n        };\n        const onBlur = () =>\n        {\n            setFocus(false);\n        }\n        editor.clipboard.addMatcher('img', function(node, delta) {\n            return new Delta();\n        });\n        editor.root.addEventListener(`focus`, onFocus);\n        editor.root.addEventListener(`blur`, onBlur);\n        editor.on(`text-change`, function(){\n            if( editor.root.innerHTML !== `<p><br></p>` )\n            {\n                setSendable(true);\n            }\n            else\n            {\n                setSendable(false);\n            }\n        });\n        setEditor( editor );\n    }, [ Quill ]);\n\n    return (\n        <div className={props.className}>\n            <div id={`editor`} />\n\n            <div id={`toolbar`} className={`${focus===true?`enabled`:``}${sendable===true?` enabled-mobile`:``}`}>\n                <div className={`left-container`}>\n                    <button className={`ql-bold${focus===true?` bt-enabled`:``}`} ><MdFormatBold size={18} /></button>\n                    <button className={`ql-italic${focus===true?` bt-enabled`:``}`} ><MdFormatItalic size={18} /></button>\n                    <button className={`ql-strike${focus===true?` bt-enabled`:``}`} ><MdFormatStrikethrough size={18} /></button>\n                    <button className={`ql-underline${focus===true?` bt-enabled`:``}`} ><MdFormatUnderlined size={18} /></button>\n                    <button className={`ql-list${focus===true?` bt-enabled`:``}`} value={`bullet`} ><MdFormatListBulleted size={18} /></button>\n                    <button className={`ql-list${focus===true?` bt-enabled`:``}`} value={`ordered`} ><MdFormatListNumbered size={18} /></button>\n                    <button className={`${focus===true?` bt-enabled`:``}`} ><MdLink size={18}/></button>\n                </div>\n                <div className={`right-container`}>\n                    <button className={`bt-enabled`}><HiOutlinePaperClip size={18} /></button>\n                    <button className={`submit-button${sendable===true?` bt-enabled`:``}`} onClick={onSubmit}>\n                        { props.waiting === true ?\n                            <ImSpinner2 className={`spinner`} size={18} /> :\n                            <MdSend size={18} />\n                        }\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst Styled = styled(Editor)`\n    font-family: Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    border-radius: 4px;\n    border-top: 1px solid #0000001F;\n    @media screen and ( min-width:480px )\n    {\n        border: 1px solid #0000005F;\n    }\n    #toolbar\n    {\n        transition: 0.3s;\n        box-sizing: border-box;\n        display: flex;\n        height: 45px;\n        button\n        {\n            transition: 0.3s;\n            margin: 1px;\n            border: none;\n            border-radius: 4px;\n            outline: none;\n            background: none;\n            height: 100%;\n            width: 35px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: #0000002F;\n        }\n        .bt-enabled\n        {\n            color: #0000008F !important;\n            &:hover\n            {\n                background-color: #0000000F;\n            }\n        }\n        .left-container\n        {\n            display: flex;\n            height: 100%;\n        }\n        .right-container\n        {\n            display: flex;\n            height: 100%;\n            margin-left: auto;\n        }\n        .spinner\n        {\n            @keyframes rotation\n            {\n                0%{ transform:rotate(0); }\n                100%{ transform:rotate(360deg); }\n            }\n            animation: 0.8s linear infinite rotation;\n        }\n        visibility: hidden;\n        max-height: 0;\n        position: fixed;\n        @media screen and ( min-width:480px )\n        {\n            visibility: visible;\n            max-height: 50px;\n            padding: 5px;\n            position: static;\n        }\n    }\n    .enabled\n    {\n        visibility: visible !important;\n        max-height: 50px !important;\n        position: static !important;\n        @media screen and ( min-width:480px )\n        {\n            background-color: #00000006;\n        }\n    }\n    .enabled-mobile\n    {\n        @media screen and ( max-width:480px )\n        {\n            visibility: visible !important;\n            max-height: 50px !important;\n            position: static !important;\n        }\n    }\n    // quill\n    .ql-container\n    {\n        box-sizing: border-box;\n        font-size: 14px;\n        height: 100%;\n        margin: 0;\n        position: relative;\n    }\n    .ql-editor\n    {\n        box-sizing: border-box;\n        line-height: 1.42;\n        height: 100%;\n        outline: none;\n        overflow-y: auto;\n        padding: 12px 15px;\n        tab-size: 4;\n        text-align: left;\n        white-space: pre-wrap;\n    }\n    .ql-editor.ql-blank::before\n    {\n        color: #0000005F;\n        content: attr(data-placeholder);\n        left: 15px;\n        pointer-events: none;\n        position: absolute;\n        right: 15px;\n    }\n    .ql-clipboard\n    {\n        left: -100000px;\n        height: 1px;\n        overflow-y: hidden;\n        position: absolute;\n        top: 50%;\n    }\n    ul, ol\n    {\n        list-style-position: inside;\n        margin: 0;\n        padding: 0;\n        padding-left: 10px;\n    }\n    p\n    {\n        margin: 0;\n        padding: 0;\n    }\n`;\n\nexport default Styled;\n",{"ruleId":"29","severity":1,"message":"30","line":1,"column":8,"nodeType":"31","messageId":"32","endLine":1,"endColumn":13},{"ruleId":"29","severity":1,"message":"33","line":1,"column":27,"nodeType":"31","messageId":"32","endLine":1,"endColumn":36},{"ruleId":"29","severity":1,"message":"34","line":1,"column":51,"nodeType":"31","messageId":"32","endLine":1,"endColumn":57},{"ruleId":"29","severity":1,"message":"35","line":2,"column":8,"nodeType":"31","messageId":"32","endLine":2,"endColumn":20},{"ruleId":"29","severity":1,"message":"36","line":3,"column":10,"nodeType":"31","messageId":"32","endLine":3,"endColumn":19},{"ruleId":"37","severity":1,"message":"38","line":39,"column":8,"nodeType":"39","endLine":39,"endColumn":19,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":58,"column":37,"nodeType":"43","endLine":58,"endColumn":174},{"ruleId":"29","severity":1,"message":"30","line":1,"column":8,"nodeType":"31","messageId":"32","endLine":1,"endColumn":13},{"ruleId":"37","severity":1,"message":"44","line":15,"column":22,"nodeType":"31","endLine":15,"endColumn":33},{"ruleId":"37","severity":1,"message":"45","line":77,"column":8,"nodeType":"39","endLine":77,"endColumn":17,"suggestions":"46"},"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useRef' is defined but never used.","'sanitizeHtml' is defined but never used.","'useUpdate' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'items'. Either include it or remove the dependency array. You can also do a functional update 'setItems(i => ...)' if you only need 'items' in the 'setItems' call.","ArrayExpression",["47"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'props.placeholder'. Either include it or remove the dependency array. Outer scope values like 'Quill' aren't valid dependencies because mutating them doesn't re-render the component.",["48"],{"desc":"49","fix":"50"},{"desc":"51","fix":"52"},"Update the dependencies array to be: [items]",{"range":"53","text":"54"},"Update the dependencies array to be: [props.placeholder]",{"range":"55","text":"56"},[1372,1383],"[items]",[2483,2492],"[props.placeholder]"]