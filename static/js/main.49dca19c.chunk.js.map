{"version":3,"sources":["Editor.js","App.js","reportWebVitals.js","index.js"],"names":["Styled","styled","props","useState","editor","setEditor","sendable","setSendable","focus","setFocus","onSubmit","useCallback","e","a","preventDefault","value","root","innerHTML","setContents","insert","setSelection","useEffect","Quill","modules","toolbar","container","handlers","href","prompt","format","placeholder","undefined","clipboard","addMatcher","node","delta","Delta","addEventListener","on","className","id","size","onClick","waiting","dayjs","locale","setWaiting","items","setItems","members","length","Promise","resolve","reject","setTimeout","div","document","getElementById","now","timeStr","message","name","faker","firstName","lastName","date","hour","color","random","number","scrollTop","scrollHeight","map","item","src","dangerouslySetInnerHTML","__html","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.49dca19c.chunk.js","sourcesContent":["import react, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Quill from 'quill';\nimport Delta from 'quill-delta';\n// import 'react-quill/dist/quill.snow.css';\nimport { MdSend, MdFormatBold, MdFormatItalic, MdFormatStrikethrough, MdLink, MdFormatUnderlined, MdFormatListBulleted, MdFormatListNumbered } from 'react-icons/md';\nimport { HiOutlinePaperClip } from 'react-icons/hi';\nimport { ImSpinner2 } from 'react-icons/im';\n\nconst Editor = ( props ) =>\n{\n    const [ editor, setEditor ] = useState();\n    const [ sendable, setSendable ] = useState(false);\n    const [ focus, setFocus] = useState(false);\n    const onSubmit = useCallback( async( e ) =>\n    {\n        e.preventDefault();\n        setFocus(true);\n        const value = editor.root.innerHTML;\n        if( value === `<p><br></p>` )\n        {\n            return;\n        };\n        await props.onSubmit( value );\n        editor.setContents([{ insert: `\\n`}]);\n        editor.setSelection(0, 0);\n    } );\n\n    useEffect( () =>\n    {\n        const editor = new Quill('#editor',\n        {\n            modules:\n            {\n                toolbar:\n                {\n                    container: '#toolbar',\n                    handlers:\n                    {\n                        'link': function(value) {\n                            if (value) {\n                              var href = prompt('Enter the URL');\n                              editor.format('link', href);\n                            } else {\n                              editor.format('link', false);\n                            }\n                        }                      \n                    }\n                }\n            },\n            placeholder: props.placeholder !== undefined ? props.placeholder : ``,\n        });\n        const onFocus = () =>\n        {\n            setFocus(true);\n        };\n        const onBlur = () =>\n        {\n            setFocus(false);\n        }\n        editor.clipboard.addMatcher('img', function(node, delta) {\n            return new Delta();\n        });\n        editor.root.addEventListener(`focus`, onFocus);\n        editor.root.addEventListener(`blur`, onBlur);\n        editor.on(`text-change`, function(){\n            if( editor.root.innerHTML !== `<p><br></p>` )\n            {\n                setSendable(true);\n            }\n            else\n            {\n                setSendable(false);\n            }\n        });\n        setEditor( editor );\n    }, [ Quill ]);\n\n    return (\n        <div className={props.className}>\n            <div id={`editor`} />\n\n            <div id={`toolbar`} className={`${focus===true?`enabled`:``}${sendable===true?` enabled-mobile`:``}`}>\n                <div className={`left-container`}>\n                    <button className={`ql-bold${focus===true?` bt-enabled`:``}`} ><MdFormatBold size={18} /></button>\n                    <button className={`ql-italic${focus===true?` bt-enabled`:``}`} ><MdFormatItalic size={18} /></button>\n                    <button className={`ql-strike${focus===true?` bt-enabled`:``}`} ><MdFormatStrikethrough size={18} /></button>\n                    <button className={`ql-underline${focus===true?` bt-enabled`:``}`} ><MdFormatUnderlined size={18} /></button>\n                    <button className={`ql-list${focus===true?` bt-enabled`:``}`} value={`bullet`} ><MdFormatListBulleted size={18} /></button>\n                    <button className={`ql-list${focus===true?` bt-enabled`:``}`} value={`ordered`} ><MdFormatListNumbered size={18} /></button>\n                    <button className={`${focus===true?` bt-enabled`:``}`} ><MdLink size={18}/></button>\n                </div>\n                <div className={`right-container`}>\n                    <button className={`bt-enabled`}><HiOutlinePaperClip size={18} /></button>\n                    <button className={`submit-button${sendable===true?` bt-enabled`:``}`} onClick={onSubmit}>\n                        { props.waiting === true ?\n                            <ImSpinner2 className={`spinner`} size={18} /> :\n                            <MdSend size={18} />\n                        }\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst Styled = styled(Editor)`\n    font-family: Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    border-radius: 4px;\n    border-top: 1px solid #0000001F;\n    @media screen and ( min-width:480px )\n    {\n        border: 1px solid #0000005F;\n    }\n    #toolbar\n    {\n        transition: 0.3s;\n        box-sizing: border-box;\n        display: flex;\n        height: 45px;\n        button\n        {\n            transition: 0.3s;\n            margin: 1px;\n            border: none;\n            border-radius: 4px;\n            outline: none;\n            background: none;\n            height: 100%;\n            width: 35px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: #0000002F;\n        }\n        .bt-enabled\n        {\n            color: #0000008F !important;\n            &:hover\n            {\n                background-color: #0000000F;\n            }\n        }\n        .left-container\n        {\n            display: flex;\n            height: 100%;\n        }\n        .right-container\n        {\n            display: flex;\n            height: 100%;\n            margin-left: auto;\n        }\n        .spinner\n        {\n            @keyframes rotation\n            {\n                0%{ transform:rotate(0); }\n                100%{ transform:rotate(360deg); }\n            }\n            animation: 0.8s linear infinite rotation;\n        }\n        visibility: hidden;\n        max-height: 0;\n        position: fixed;\n        @media screen and ( min-width:480px )\n        {\n            visibility: visible;\n            max-height: 50px;\n            padding: 5px;\n            position: static;\n        }\n    }\n    .enabled\n    {\n        visibility: visible !important;\n        max-height: 50px !important;\n        position: static !important;\n        @media screen and ( min-width:480px )\n        {\n            background-color: #00000006;\n        }\n    }\n    .enabled-mobile\n    {\n        @media screen and ( max-width:480px )\n        {\n            visibility: visible !important;\n            max-height: 50px !important;\n            position: static !important;\n        }\n    }\n    // quill\n    .ql-container\n    {\n        box-sizing: border-box;\n        font-size: 14px;\n        height: 100%;\n        margin: 0;\n        position: relative;\n    }\n    .ql-editor\n    {\n        box-sizing: border-box;\n        line-height: 1.42;\n        height: 100%;\n        outline: none;\n        overflow-y: auto;\n        padding: 12px 15px;\n        tab-size: 4;\n        text-align: left;\n        white-space: pre-wrap;\n    }\n    .ql-editor.ql-blank::before\n    {\n        color: #0000005F;\n        content: attr(data-placeholder);\n        left: 15px;\n        pointer-events: none;\n        position: absolute;\n        right: 15px;\n    }\n    .ql-clipboard\n    {\n        left: -100000px;\n        height: 1px;\n        overflow-y: hidden;\n        position: absolute;\n        top: 50%;\n    }\n    ul, ol\n    {\n        list-style-position: inside;\n        margin: 0;\n        padding: 0;\n        padding-left: 10px;\n    }\n    p\n    {\n        margin: 0;\n        padding: 0;\n    }\n`;\n\nexport default Styled;\n","import react, { useState, useEffect, useCallback, useRef } from 'react';\nimport sanitizeHtml from 'sanitize-html';\nimport { useUpdate } from 'react-use';\nimport styled from 'styled-components';\nimport Editor from './Editor';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport faker from 'faker';\nimport 'dayjs/locale/ja';\nimport dayjs from 'dayjs';\ndayjs.locale(`ja`);\n\nconst App = ({ className }) =>\n{\n    const [ waiting, setWaiting ] = useState( false );\n    const [ items, setItems ] = useState( [] );\n    const members = items.length;\n    const onSubmit = useCallback( ( value ) =>\n    {\n        return new Promise( (resolve, reject) =>\n        {\n            setWaiting( true );\n            setTimeout( () =>\n            {\n                const div = document.getElementById(`message-container`);\n                const now = dayjs();\n                const timeStr = now.format('h:mm');\n                setItems( [ ...items,\n                {\n                    message: value,\n                    name: faker.name.firstName() + ` ` + faker.name.lastName(),\n                    date: `${timeStr} ${now.hour() >= 12 ? `PM` : `AM`}`,\n                    color: faker.random.number(10),\n                } ] );\n                div.scrollTop = div.scrollHeight;\n                setWaiting( false );\n                resolve();\n            }, 500 );\n        });\n    }, [ waiting ] );\n\n    return (\n        <div className={className}>\n            <div className={`header`}>\n                <div className={`arrow`}>\n                    <IoIosArrowBack size={18} />\n                </div>\n                <div>\n                    <div className={`channel-name`}>⭐︎最初のチャンネル</div>\n                    <div className={`channel-text`}>{members} members</div>\n                </div>\n            </div>\n            <div className={`content`}>\n                <div id={`message-container`} className={`message-container`}>\n                    {items.map(item => {\n                        return (\n                            <div className={`message`} key={item.name}>\n                                <div className={`user`}>\n                                    <img src={`https://github.com/shirotaro3/rich-editor/blob/master/public/user.png?raw=true`} className={`user-icon`} color={item.color} />\n                                </div>\n                                <div>\n                                    <div>\n                                        <span className={`user-name`}>{item.name}</span>\n                                        <span className={`date`}>{item.date}</span>\n                                    </div>\n                                    <div className={`html`} dangerouslySetInnerHTML={{__html: item.message}} />\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n\n            <div className={`footer`}>\n                <Editor\n                    placeholder={`最初のチャンネル にメッセージを投稿する`}\n                    onSubmit={onSubmit}\n                    waiting={waiting}\n                />\n            </div>\n        </div>\n    );\n};\n\nconst Styled = styled(App)`\n    font-family: Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    ul, ol\n    {\n        list-style-position: inside;\n        margin: 0;\n        padding: 0;\n        padding-left: 10px;\n    }\n    p\n    {\n        margin: 0;\n        padding: 0;\n    }\n    .header\n    {\n        display: flex;\n        height: 35px;\n        padding: 10px 10px;\n        border-bottom: 1px solid #0000001F;\n        @media screen and ( min-width:480px )\n        {\n            padding: 10px 20px;\n        }\n    }\n    .header .arrow\n    {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 40px;\n        @media screen and ( min-width:480px )\n        {\n            display: none;\n        }\n    }\n    .header .channel-name\n    {\n        font-size: 15px;\n        font-weight: bold;\n    }\n    .header .channel-text\n    {\n        font-size: 12px;\n        color: #0000007F;\n    }\n    .content\n    {\n        flex-grow: 1;\n        position: relative;\n    }\n    .content .message-container\n    {\n        position: absolute;\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n        scroll-behavior: smooth;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        max-height: calc(100% - 15px);\n        padding-bottom: 15px;\n    }\n    .message-container .message\n    {\n        @keyframes accordion\n        {\n            0%{ background-color: #0000002F; }\n            100%{ background-color: none; }\n        }\n        display: flex;\n        position: relative;\n        animation: 1s linear 1 accordion;\n        font-size: 14px;\n        padding: 5px 20px;\n        &:hover\n        {\n            background: #00000009;\n        }\n        p\n        {\n            margin: 1px;\n            padding: 0px;\n        }\n    }\n    .message .user\n    {\n        width: 35px;\n        padding-right: 10px;\n    }\n    .message .html\n    {\n        padding-top: 3px;\n    }\n    .user .user-icon\n    {\n        height: 35px;\n        width: 35px;\n        border-radius: 4px;\n        object-fit: cover;\n    }\n    .user-icon[color='0']\n    {\n        background-color: lightgrey;\n    }\n    .user-icon[color='1']\n    {\n        background-color: pink;\n    }\n    .user-icon[color='2']\n    {\n        background-color: orange;\n    }\n    .user-icon[color='3']\n    {\n        background-color: violet;\n    }\n    .user-icon[color='4']\n    {\n        background-color: tomato;\n    }\n    .user-icon[color='5']\n    {\n        background-color: lightblue;\n    }\n    .user-icon[color='6']\n    {\n        background-color: lightgreen;\n    }\n    .user-icon[color='7']\n    {\n        background-color: red;\n    }\n    .user-icon[color='8']\n    {\n        background-color: blue;\n    }\n    .user-icon[color='9']\n    {\n        background-color: green;\n    }\n    .user-icon[color='10']\n    {\n        background-color: yellow;\n    }\n    .user-name\n    {\n        font-weight: bold;\n        font-size: 14px;\n    }\n    .date\n    {\n        font-size: 12px;\n        color: #0000007F;\n        margin-left: 7px;\n    }\n    .footer\n    {\n        padding: 0;\n        @media screen and ( min-width:480px )\n        {\n            padding: 0 20px 20px 20px;\n        }\n    }\n`;\n\nexport default Styled;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}